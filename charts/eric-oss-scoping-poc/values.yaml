#
# COPYRIGHT Ericsson 2024
#
#
#
# The copyright to the computer program(s) herein is the property of
#
# Ericsson Inc. The programs may be used and/or copied only with written
#
# permission from Ericsson Inc. or in accordance with the terms and
#
# conditions stipulated in the agreement/contract under which the
#
# program(s) have been supplied.
#

# Default values for eric-oss-scoping-poc.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

#global:
#  timezone: UTC
#  registry:
#    url: armdocker.rnd.ericsson.se
#    pullPolicy: IfNotPresent
#  #Secret must be manually created in the namespace, no default value
#  pullSecret: eric-adp-example-secret
#  fsGroup:
#    manual: 10000
#    namespace: true
#  # The IP family the service belongs to when service.type is set to ClusterIP.
#  # Options are: IPv4, IPv6
#  internalIPFamily:
#  security:
#    policyBinding:
#      create: true
#    policyReferenceMap:
#      default-restricted-security-policy: "<restricted security policy at customer deployment>"
#    tls:
#      enabled: true

replicaCount: 1

podDisruptionBudget:
  # Minimum number/percentage of Pods that must remain available during the planned disruption.
  # Value can be expressed as an integer or as a percentage. When specified as a percentage of the Pods,
  # if it does not map to an exact number, Kubernetes rounds up to the nearest integer.
  # minAvailable: 2 # example value for 2 pods defined as integer
  minAvailable: "40%"

updateStrategy:
 type: RollingUpdate
 rollingUpdate:
   maxSurge: 1
   maxUnavailable: 0

#Empty labels list for application deployment engineer to add more labels (In Compliance with DR-D1121-068).
labels: {}

imageCredentials:
  repoPath:
  eric-oss-scoping-poc:
    repoPath: # see default in eric-product-info.yaml
    registry: {}
      # overrides global registry url
      # url:
      #- Secret must be manually created in the namespace, no default value
      # pullSecret: REPO_SECRET

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

annotations: {}

service:
  type: ClusterIP
  port: 8080    # Changed from 80 to 8080 and spring application is hosted on 8080
  endpoints:
    chassisapi:
      tls:
        enforced: required
        verifyClientCertificate: required

ingress:
  enabled: false
  ingressClass: OAM-IngressClass
  hosts:
    - host: chart-example.local
      paths: [/]

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
metrics:
  serviceName: "eric-pm-server"
  serviceMonitor:
    enabled: true

prometheus:
  path: /actuator/prometheus
  scrape: true

terminationGracePeriodSeconds: 30

resources:
  eric-oss-scoping-poc:
    requests:
      memory: 1024Mi
      cpu: 125m
      ephemeral-storage: ""
    limits:
      memory: 3Gi
      cpu: 500m
      ephemeral-storage: ""
    jvm:
      initialMemoryAllocationPercentage: 50
      smallMemoryAllocationMaxPercentage: 70
      largeMemoryAllocationMaxPercentage: 50
  object-storage-client-lib:
    requests:
      memory: 1024Mi
      cpu: 64m
      ephemeral-storage: ""
    limits:
      memory: 2Gi
      cpu: 125m
      ephemeral-storage: ""

autoScaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}
topologySpreadConstraints:
  deployment: []
  test: []

tolerations:
  - key: node.kubernetes.io/not-ready
    operator: Exists
    effect: NoExecute
    tolerationSeconds: 0
  - key: node.kubernetes.io/unreachable
    operator: Exists
    effect: NoExecute
    tolerationSeconds: 0

affinity:
  podAntiAffinity: "soft"

probes:
  eric-oss-scoping-poc:
    startupProbe:
      failureThreshold: 6
      initialDelaySeconds: 60
      periodSeconds: 10
      timeoutSeconds: 10
    livenessProbe:
      failureThreshold: 6
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 10
    readinessProbe:
      failureThreshold: 6
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 10
  eric-oss-scoping-poc-gui:
    livenessProbe:
      failureThreshold: 6
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 10
    readinessProbe:
      failureThreshold: 6
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 10

podPriority:
  eric-oss-scoping-poc:
    priorityClassName: ""

networkPolicy:
  enabled: false

# DR-470222-010
# local streamingMethod:
# indirect - stdout to infrastructure logging framework
# direct - direct streaming to the Log Aggregator (e.g. eric-log-transformer)
# dual - stdout to infrastructure logging framework and direct streaming to Log Aggregator
# null - null or absent parameter the streaming method is determined by global.log.streamingMethod
# Indirect is chosen to enable stdout in the absence of log aggregator
log:
  streamingMethod: "indirect"

# choice='unconfined, runtime/default, localhost' [ default= ""]
# Configuration of AppArmor profile type. The following values are possible:
# unconfined  - Indicates that there is no profile loaded.
# runtime/default - Applies the default profile of the container engine.
# localhost   - Applies a specific profile loaded on the host
appArmorProfile:
  type: ""
seccompProfile:
  type: "RuntimeDefault"

restartPolicy:
  deployment: Always
  job: OnFailure

gui:
  enabled: true
  contextPath: scoping
  partOf: workspace-gui
  project: "project.schema.json"
  loadFrom:
    host:
    user:
    pass:

persistentVolumeClaim:
  enabled: false
  size: 100Mi

configuration:
  app: []
  objectStore:
    name: "eric-data-object-storage-mn"
    secret: "eric-data-object-storage-mn-secret"
    bucket: cellclustering

# EIC platform
baseUrl:
clientId:
clientSecret:
caSecretName: iam-cacert-secret
caSecretKey: tls.crt

rappSdk:
  dcc:
    enabled: false